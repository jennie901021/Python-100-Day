//使用前後端分離開發有諸多的好處，下面我們簡要的說下這些好處：

1. 提升開發效率。前後端分離以後，可以實現前後端代碼的解耦，只要前後端溝通約定好應用所需接口以及接口參數，便可以開始並行開發，無需等
  待對方的開發工作結束。在這種情況下，前後端工程師都可以只專注於自己的開發工作，有助於打造出更好的團隊。除此之外，在前後端分離的開發模式下，即使需求發生變更，只要接口與數據格式不變，後端開發人員就不需要修改代碼，只要前端進行變動即可。
2. 增強代碼的可維護性。前後端分離後，應用的代碼不再是前後端混合，只有在運行期才會有調用依賴關係，這樣的話維護代碼的工作將變得輕鬆愉
  快很多，再不會牽一發而動全身。當你的代碼變得簡明且整潔時，代碼的可讀性和可維護性都會有質的提升。
3. 支持多終端和服務化架構。前後端分離後，同一套數據接口可以為不同的終端提供服務，更有助於打造多終端應用；此外，由於後端提供的接口之
  間可以通過HTTP(S)進行調用，有助於打造服務化架構（包括微服務）。

#返回JSON格式的数据

def show_subjects(request);
    queryset = Subject.objects.all()
    subjects = []
    for subject in queryset:
        subjects.append({
            'no': subject.no,
            'name': subject.name,
            'intro': subject.intro,
            'isHot': subject.is_hot
        })
    return JsonResponse(subjects, safe=False)

